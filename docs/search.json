{
  "articles": [
    {
      "path": "code_of_conduct.html",
      "author": [],
      "contents": "\n\nContents\nVereinbarung über Verhaltenskodex für Mitwirkende\nUnsere Verpflichtung\nUnsere Standards\nVerantwortlichkeiten bei der Durchsetzung\nGeltungsbereich\nUmsetzung\nDurchsetzungsrichtlinien\n1. Berichtigung\n2. Verwarnung\n3. Vorübergehender Ausschluss\n4. Dauerhafter Ausschluss\n\nBezug\n\n\nVereinbarung über Verhaltenskodex für Mitwirkende\nUnsere Verpflichtung\nWir als Mitglieder, Teilnehmende und Verantwortliche unserer Gemeinschaft verpflichten uns bei der Teilnahme an dem Projekt und unserer Gemeinschaft zu einer belästigungsfreien Erfahrung für alle, unabhängig von Alter, Körpergröße, Behinderung, ethnischer Zuordnung, geschlechtlicher Identität und Ausdruck, Grad der Erfahrung, Bildung, sozialem Status, Nationalität, persönlicher Erscheinung, Rasse, Religion oder Geschlechtsidentität und sexueller Orientierung.\nWir verpflichten uns, in einer Weise zu handeln und zu interagieren, die zu einer offenen, einladenden, vielfältigen, inklusiven und gesunden Gemeinschaft beiträgt.\nUnsere Standards\nBeispiele für Verhaltensweisen, die zu einem positiven Umfeld für unsere Gemeinschaft beitragen, sind:\nEinfühlungsvermögen und Freundlichkeit gegenüber anderen Menschen zeigen\nUnterschiedliche Meinungen, Standpunkte und Erfahrungen respektieren\nKonstruktives Feedback geben und würdevoll annehmen\nVerantwortung übernehmen und uns bei denjenigen entschuldigen, die von unseren Fehlern betroffen sind, und aus den Erfahrungen lernen\nKonzentration auf das, was nicht nur für uns als Individuen, sondern für die gesamte Gemeinschaft das Beste ist\nBeispiele für inakzeptables Verhalten sind:\nDie Verwendung sexualisierter Sprache, Bilder oder Symbolik sowie unerwünschte Versuche sexueller Annäherung\nBeleidigende oder abwertende Kommentare, persönliche oder politische Angriffe und trollen\nÖffentliche oder private Belästigungen\nDas Veröffentlichen von privaten Informationen Anderer, wie zum Beispiel physische oder elektronische Adressen, ohne deren ausdrückliche Erlaubnis\nAnderes Verhalten, welches in einem professionellen Umfeld begründet als unangemessen betrachtet werden kann\nVerantwortlichkeiten bei der Durchsetzung\nDie Gemeinschaftsleitung ist verantwortlich dafür, unsere Standards für ein akzeptables Benehmen klarzustellen und werden angemessen und fair korrigierende Maßnahmen ergreifen um auf jegliches Verhalten, das sie für unangemessen, bedrohlich oder beleidigend halten, zu reagieren.\nDie Gemeinschaftsleitung hat das Recht und die Verantwortung Kommentare, Commits, Code, Wiki-Bearbeitungen, Support-Tickets und andere Beiträge, die nicht mit diesem Verhaltenskodex vereinbar sind zu entfernen, zu bearbeiten oder abzulehnen, und werden die Gründe für eine Mäßigung mitteilen, wenn es angebracht ist.\nGeltungsbereich\nDieser Verhaltenskodex gilt für alle Gemeinschaftsbereiche und gilt auch, wenn eine Einzelperson die Gemeinschaft offiziell in öffentlichen Bereichen vertritt. Beispiele für die Repräsentation unserer Gemeinschaft sind die Verwendung einer offiziellen E-Mail-Adresse, das Posten über ein offizielles Social-Media-Konto oder das Auftreten als ernannte Vertretung bei einer Online- oder Offline-Veranstaltung.\nUmsetzung\nFälle von missbräuchlichem, belästigendem oder anderweitig inakzeptablem Verhalten können unter [lars@lse.de] der für die Durchsetzung zuständigen Gemeinschaftsleitung gemeldet werden. Alle Beschwerden werden zeitnah und fair geprüft und ermittelt.\nDie gesamte Gemeinschaftsleitung ist verpflichtet, die Privatsphäre und die Sicherheit derjenigen, die einen Vorfall gemeldet haben, zu respektieren.\nDurchsetzungsrichtlinien\nDie Gemeinschaftsleitung wird sich bei der Bestimmung der Konsequenzen für jede Handlung, die ihrer Ansicht nach gegen diesen Verhaltenskodex verstößt, an diese Richtlinien über die Auswirkungen in der Gemeinschaft halten:\n1. Berichtigung\nAuswirkungen in der Gemeinschaft: Verwendung unangemessener Sprache oder anderes Verhalten, das in der Gemeinschaft als unprofessionell oder unwillkommen gilt.\nFolge: Eine private, schriftliche Verwarnung der Gemeinschaftsleitung, die Klarheit über die Art des Verstoßes und eine Erklärung dafür bietet, warum das Verhalten unangemessen war. Eine öffentliche Entschuldigung kann verlangt werden.\n2. Verwarnung\nAuswirkungen in der Gemeinschaft: Eine Verletzung durch einen einzelnen Vorfall oder eine Reihe von Handlungen.\nFolge: Eine Warnung mit Konsequenzen bei wiederholtem Fehlverhalten. Keine Interaktion mit den beteiligten Personen, einschließlich unaufgeforderter Interaktion mit denjenigen, die den Verhaltenskodex durchsetzen, für einen bestimmten Zeitraum. Dazu gehört die Vermeidung von Interaktionen in Gemeinschaftsräumen sowie in externen Kanälen wie sozialen Medien. Ein Verstoß gegen diese Bedingungen kann zu einem vorübergehenden oder dauerhaften Verbot führen.\n3. Vorübergehender Ausschluss\nAuswirkungen in der Gemeinschaft: Eine schwerwiegende Verletzung von Gemeinschaftsstandards, einschließlich anhaltend unangemessenen Verhaltens.\nFolge: Ein zeitlich begrenztes Verbot jeglicher Art von Interaktion oder öffentlicher Kommunikation mit der Gemeinschaft. Während dieses Zeitraums ist keine öffentliche oder private Interaktion mit den beteiligten Personen erlaubt. Auch keine unaufgeforderte Interaktion mit denjenigen, die den Verhaltenskodex durchsetzen. Ein Verstoß gegen diese Bedingungen kann zu einem dauerhaften Verbot führen.\n4. Dauerhafter Ausschluss\nAuswirkungen in der Gemeinschaft: Aufzeigen eines Musters von Verletzungen der Gemeinschaftsstandards, einschließlich anhaltend unangemessenen Verhaltens, Belästigung einer Person oder Aggression gegen oder Herabsetzung von Gruppen von Personen.\nFolge: Ein dauerhaftes Verbot jeglicher Art von öffentlicher Interaktion innerhalb der Gemeinschaft.\nBezug\nDieser Verhaltenskodex basiert auf dem Contributor Covenant, Version 2.0, verfügbar unter https://www.contributor-covenant.org/de/version/2/0/code-of-conduct\n\n\n\n",
      "last_modified": "2021-03-08T11:19:49+01:00"
    },
    {
      "path": "code_of_conduct.html",
      "title": "Code of Conduct",
      "author": [],
      "contents": "\n\nContents\nVereinbarung über Verhaltenskodex für Mitwirkende\nUnsere Verpflichtung\nUnsere Standards\nVerantwortlichkeiten bei der Durchsetzung\nGeltungsbereich\nUmsetzung\nDurchsetzungsrichtlinien\n1. Berichtigung\n2. Verwarnung\n3. Vorübergehender Ausschluss\n4. Dauerhafter Ausschluss\n\nBezug\n\n\nVereinbarung über Verhaltenskodex für Mitwirkende\nUnsere Verpflichtung\nWir als Mitglieder, Teilnehmende und Verantwortliche unserer Gemeinschaft verpflichten uns bei der Teilnahme an dem Projekt und unserer Gemeinschaft zu einer belästigungsfreien Erfahrung für alle, unabhängig von Alter, Körpergröße, Behinderung, ethnischer Zuordnung, geschlechtlicher Identität und Ausdruck, Grad der Erfahrung, Bildung, sozialem Status, Nationalität, persönlicher Erscheinung, Rasse, Religion oder Geschlechtsidentität und sexueller Orientierung.\nWir verpflichten uns, in einer Weise zu handeln und zu interagieren, die zu einer offenen, einladenden, vielfältigen, inklusiven und gesunden Gemeinschaft beiträgt.\nUnsere Standards\nBeispiele für Verhaltensweisen, die zu einem positiven Umfeld für unsere Gemeinschaft beitragen, sind:\nEinfühlungsvermögen und Freundlichkeit gegenüber anderen Menschen zeigen\nUnterschiedliche Meinungen, Standpunkte und Erfahrungen respektieren\nKonstruktives Feedback geben und würdevoll annehmen\nVerantwortung übernehmen und uns bei denjenigen entschuldigen, die von unseren Fehlern betroffen sind, und aus den Erfahrungen lernen\nKonzentration auf das, was nicht nur für uns als Individuen, sondern für die gesamte Gemeinschaft das Beste ist\nBeispiele für inakzeptables Verhalten sind:\nDie Verwendung sexualisierter Sprache, Bilder oder Symbolik sowie unerwünschte Versuche sexueller Annäherung\nBeleidigende oder abwertende Kommentare, persönliche oder politische Angriffe und trollen\nÖffentliche oder private Belästigungen\nDas Veröffentlichen von privaten Informationen Anderer, wie zum Beispiel physische oder elektronische Adressen, ohne deren ausdrückliche Erlaubnis\nAnderes Verhalten, welches in einem professionellen Umfeld begründet als unangemessen betrachtet werden kann\nVerantwortlichkeiten bei der Durchsetzung\nDie Gemeinschaftsleitung ist verantwortlich dafür, unsere Standards für ein akzeptables Benehmen klarzustellen und werden angemessen und fair korrigierende Maßnahmen ergreifen um auf jegliches Verhalten, das sie für unangemessen, bedrohlich oder beleidigend halten, zu reagieren.\nDie Gemeinschaftsleitung hat das Recht und die Verantwortung Kommentare, Commits, Code, Wiki-Bearbeitungen, Support-Tickets und andere Beiträge, die nicht mit diesem Verhaltenskodex vereinbar sind zu entfernen, zu bearbeiten oder abzulehnen, und werden die Gründe für eine Mäßigung mitteilen, wenn es angebracht ist.\nGeltungsbereich\nDieser Verhaltenskodex gilt für alle Gemeinschaftsbereiche und gilt auch, wenn eine Einzelperson die Gemeinschaft offiziell in öffentlichen Bereichen vertritt. Beispiele für die Repräsentation unserer Gemeinschaft sind die Verwendung einer offiziellen E-Mail-Adresse, das Posten über ein offizielles Social-Media-Konto oder das Auftreten als ernannte Vertretung bei einer Online- oder Offline-Veranstaltung.\nUmsetzung\nFälle von missbräuchlichem, belästigendem oder anderweitig inakzeptablem Verhalten können unter [lars@lse.de] der für die Durchsetzung zuständigen Gemeinschaftsleitung gemeldet werden. Alle Beschwerden werden zeitnah und fair geprüft und ermittelt.\nDie gesamte Gemeinschaftsleitung ist verpflichtet, die Privatsphäre und die Sicherheit derjenigen, die einen Vorfall gemeldet haben, zu respektieren.\nDurchsetzungsrichtlinien\nDie Gemeinschaftsleitung wird sich bei der Bestimmung der Konsequenzen für jede Handlung, die ihrer Ansicht nach gegen diesen Verhaltenskodex verstößt, an diese Richtlinien über die Auswirkungen in der Gemeinschaft halten:\n1. Berichtigung\nAuswirkungen in der Gemeinschaft: Verwendung unangemessener Sprache oder anderes Verhalten, das in der Gemeinschaft als unprofessionell oder unwillkommen gilt.\nFolge: Eine private, schriftliche Verwarnung der Gemeinschaftsleitung, die Klarheit über die Art des Verstoßes und eine Erklärung dafür bietet, warum das Verhalten unangemessen war. Eine öffentliche Entschuldigung kann verlangt werden.\n2. Verwarnung\nAuswirkungen in der Gemeinschaft: Eine Verletzung durch einen einzelnen Vorfall oder eine Reihe von Handlungen.\nFolge: Eine Warnung mit Konsequenzen bei wiederholtem Fehlverhalten. Keine Interaktion mit den beteiligten Personen, einschließlich unaufgeforderter Interaktion mit denjenigen, die den Verhaltenskodex durchsetzen, für einen bestimmten Zeitraum. Dazu gehört die Vermeidung von Interaktionen in Gemeinschaftsräumen sowie in externen Kanälen wie sozialen Medien. Ein Verstoß gegen diese Bedingungen kann zu einem vorübergehenden oder dauerhaften Verbot führen.\n3. Vorübergehender Ausschluss\nAuswirkungen in der Gemeinschaft: Eine schwerwiegende Verletzung von Gemeinschaftsstandards, einschließlich anhaltend unangemessenen Verhaltens.\nFolge: Ein zeitlich begrenztes Verbot jeglicher Art von Interaktion oder öffentlicher Kommunikation mit der Gemeinschaft. Während dieses Zeitraums ist keine öffentliche oder private Interaktion mit den beteiligten Personen erlaubt. Auch keine unaufgeforderte Interaktion mit denjenigen, die den Verhaltenskodex durchsetzen. Ein Verstoß gegen diese Bedingungen kann zu einem dauerhaften Verbot führen.\n4. Dauerhafter Ausschluss\nAuswirkungen in der Gemeinschaft: Aufzeigen eines Musters von Verletzungen der Gemeinschaftsstandards, einschließlich anhaltend unangemessenen Verhaltens, Belästigung einer Person oder Aggression gegen oder Herabsetzung von Gruppen von Personen.\nFolge: Ein dauerhaftes Verbot jeglicher Art von öffentlicher Interaktion innerhalb der Gemeinschaft.\nBezug\nDieser Verhaltenskodex basiert auf dem Contributor Covenant, Version 2.0, verfügbar unter https://www.contributor-covenant.org/de/version/2/0/code-of-conduct\n\n\n\n",
      "last_modified": "2021-03-08T11:19:49+01:00"
    },
    {
      "path": "ha-01-hallo-git.html",
      "title": "Hausaufgabe 01 - Hallo Git!",
      "author": [],
      "contents": "\n\nContents\nVerbindung zu GitHub und RStudio Cloud aufbauen\nErste Schritte\nAufwärmen\nYAML\nÄnderungen schreiben (commit)\nÄnderungen schieben (push)\n\nPakate (Packages)\nDaten\n\nÜbungen\nÜbung 1\nÜbung 2\nÜbung 3\nÜbung 4\nÜbung 5 (Bonus)\nÜbung 6 (Bonus)\n\n\nDas Hauptziel dieser Hausaufgabe ist es, dich mit R und RStudio bekannt zu machen. Ein zusätzliches Ziel ist es, dich in Git und GitHub einzuführen, das Kollaborations- und Versionskontrollsystem, das wir während des Kurses benutzen werden.\nIch ermutige dich im Laufe der Übungen über das hinauszugehen was die Übungen vorgeben. Die Bereitschaft zu experimentieren wird dich zu einer besseren Programmierin machen. Bevor wir soweit sind, ist es wichtig, dass du dir ein paar grundlegende Kenntnisse in R aneignest.\nHeute beginnen wir mit den grundlegenden Bausteinen von R und RStudio: die Benutzeroberfläche, das Einlesen von Daten und grundlegende Befehle.\nDieses erste Hausaufgabe wird von dir allein durchgeführt. In zukünfitgen Hausaufgabeen (oder auch Praktika) wirst du lernen, wie du auf GitHub in kleinen Teams zusammenarbeitest und einen Bericht für dein Team erstellst.\nVerbindung zu GitHub und RStudio Cloud aufbauen\nDu solltest eine Einladung erhalten haben, um der GitHub Organisation für diesen Kurs beizutreten. Diese Einladung musst du annehmen, bevor du mit dem nächsten Schritt fortfährst.\nÖffne deine Email welche du für deinen GitHub Konto hinterlegt hast\nKlicke auf “Join”\n\n\n\nUm deine RStudio und GitHub Konten zu verbinden, befolge die folgenden Schritte:\nÖffne rstudio.cloud und login mit deinem Benutzerkonto (nutze GitHub)\nKlicke auf deinen Namen in der oberen rechten Ecke, um das rechte Menü zu öffnen.\nKlicke dann auf “Authentication”.\n\n\n\nAktiviere im Fenster Authentifizierung das Kontrollkästchen für Enabled neben GitHub.\n\n\n\nIm nächsten Fenster klickst du auf das grüne Kästchen mit der Aufschrift “Authorize rstudio”.\n\n\n\nZurück im Authentifizierungsfenster in RStudio Cloud aktivierst du nun auch das Kästchen Private repo access also enabled\n\n\n\nWichtig: Falls Feld Organisation access noch kein grünes Häkchen neben deinem Kursnamen auftaucht, klickst du nun zunächst auf “Request” neben deinem Kursnamen und folgend auf “Request approval from owners”.\nHinweis: Sollte hier kein Kurs auftauchen, könnte dies bedeueten, dass du die GitHub-Einladung zum Kurs noch nicht angenommen hast und du solltest zurückgehen und dies überprüfen und nacholen. Falls du keine Einladung hast, kontaktiere mich.\nNun noch auf das grüne Feld “Authorize rstudio” und nach Eingabe deines Passworts bist du bereit.\n\n\n\nSobald du fertig bist, sollten in RStudio Cloud beide Kästchen markiert sein.\n\n\n\nUm zu bestätigen, dass du deine GitHub- und RStudio-Cloud-Konten erfolgreich verknüpft hast, wähle GitHub settings > Applications. Du solltest RStudio als autorisierte App unter Authorized OAuth Apps aufgelistet sehen. Falls nicht, ist dies ein guter Zeitpunkt, um eine Frage zu stellen.\n\n\n\nErste Schritte\nJede deiner Aufgaben wird mit den folgenden Schritten beginnen, welche hier im Detail beschrieben sind. In Zukunft wird jede Aufgabe mit einem Abschnitt “Erste Schritte” beginnen, aber mit etwas weniger Details. Du kannst jedoch jederzeit auf diese Hausaufgabe zurückgreifen, um eine detaillierte Liste der Schritte zu erhalten, die notwendig sind, um mit einer Aufgabe zu beginnen.\nKlicke auf den Link welchen ich in einer E-Mail mit dem Betreff (Lars hat das Repo XYZ-Dein-GitHub-Name auf GitHub erstellt) mit dir geteilt habe\nDies führt dich zu deinem persönlichen GitHub Repository (im Folgenden “Repo” genannt)\nDieses Repository enthält eine R Markdown (ha-01.Rmd) Vorlage, auf der du aufbauen kannst, um die Aufgabe zu lösen.\nAuf GitHub klickst du auf den grünen Code Button und wählst HTTPS wie im Bild unten. Klicke auf das Klemmbrett-Symbol, um die Repo-URL zu kopieren.\n\n\n\nÖffne nun RStudio Cloud und den Workspace für den Kurs. Klicke auf den Abwärtspfeil und erstelle ein New Project from Git Repository.\n\n\n\nFüge die URL aus deinem Repo oben in das Dialogfeld ein und stelle sicher, dass das Häkchen bei “Packages” gesetzt ist.\n\n\n\n\n\n\nKlicke auf OK, habe etwas Geduld, und du bist bereit zum logslegen!\nAufwärmen\nBevor wir uns die Daten anschauen, machen wir noch ein paar Aufwärmübungen um die R Markdown vorzustellen.\nYAML\nIm RStudio Cloud Workspace für den Kurs, klicke auf “Projects”\nÖffne dein Projekt in dem du darauf klickst (ha01-GitHubName)\nÖffne die R Markdown (ha-01.Rmd) Datei in deinem Projekt (Tipp: Sie befindet sich in dem Ansichtsfenster unten rechts unter dem Reiter “Files”)\nÄndere den Autorennamen zu deinem Namen, füge ein Datum hinzu und stricke (‘knit’) das Dokument.\n\n\n\n\n\n\nDer obere Teil deiner R Markdown Datei (zwischen den drei gestrichelten Linien) wird YAML genannt. Es steht für “YAML Ain’t Markup Language”. Es ist ein menschenfreundlicher Standard zur Serialisierung von Daten für alle Programmiersprachen. Alles, was du wissen musst, ist, dass dieser Bereich YAML genannt wird (wir werden ihn als solchen bezeichnen) und dass er Metainformationen über dein Dokument enthält.\nÄnderungen schreiben (commit)\nIn deinem RStudio, öffne das Fenster mit dem Titel Git im Ansichtsfenster oben rechts.\nWenn du Änderungen an deiner Rmd-Datei gemacht hast, solltest du nun hier den Dateinamen sehen. Wähle die Datei aus der Liste aus indem du sie anklickst. Dann klicke auf Diff über den Dateinamen.\nEin neues Fenster öffnet sich welche dir die Differenz zwischen dem letzten commit-Zustand des Dokuments (rot) und dem aktuellen aktuellen Zustand zeigt (grün), welcher deine Änderungen beinhaltet.\nWenn du mit diesen Änderungen zufrieden bist, klicke auf das Kontrollkästchen neben dem Dateinamen um einen Haken zu setzen und schreibe “Aktualisiere Autorenname und Datum” in das Feld Commit message. Klicke anschliessend auf Commit.\n\n\n\nDu musst nicht nach jeder Änderung committen, sondern Zustände, die für dich bedeutsam sind, um sie zu überprüfen, zu vergleichen oder wiederherzustellen.\nIn den ersten paar Aufgaben werden wir dir genau sagen, wann und mit welchem Text du committen solltest. Im weiteren Verlauf des Kurses wirst du diese Entscheidungen dann selbst treffen.\nÄnderungen schieben (push)\nJetzt, wo du ein Update gemacht und diese Änderung committed hast, ist es an der Zeit, diese Änderungen ins Web zu pushen!\nOder genauer gesagt, in dein Repo auf GitHub. Warum das? Damit andere deine Änderungen sehen können. Und mit anderen meinen wir das Kursteam (deine Repos in diesem Kurs sind für dich und uns privat).\nUm deine Änderungen auf GitHub zu pushen, klicke auf Push. Daraufhin erscheint ein Dialogfenster, in dem du zuerst deinen Benutzernamen und dann dein Passwort eingeben musst. Das ist etwas umständlich und muss bei jedem push wiederholt werden. Aber, habe etwas Geduld, im Laufe des Kurse werde ich dir beibringen wie du dein Passwort speichern kannst, damit du es nicht jedes Mal neu eingeben musst.\n\n\n\nPakate (Packages)\nIn dieser Hausaufgabe werden wir mit zwei R Packages arbeiten: datasauRus, welches den Datensatz enthält, den wir verwenden werden und tidyverse. Diese Packages sind bereits für dich installiert. Du kannst sie laden indem du den folgenden Code-chunk in deiner R Markdown Datei ausführst.\n\n\nlibrary(tidyverse) \nlibrary(datasauRus)\n\n\n\nBeachte, dass die Packages auch mit den gleichen Befehlen in deinem R Markdown Dokument geladen werden.\nDaten\nDer Dataframe, mit dem wir heute arbeiten werden, heißt datasaurus_dozen und befindet sich im R Package datasauRus. Eigentlich enthält dieser einzelne Dataframe 13 Datensätze, die uns zeigen sollen, warum Datenvisualisierung wichtig ist und wie zusammenfassende Statistiken allein irreführend sein können. Die verschiedenen Datensätze sind durch die Variable dataset gekennzeichnet.\nUm mehr über das Dataset herauszufinden, gib folgendes in deine Console ein: ?datasaurus_dozen. Ein Fragezeichen vor dem Namen eines Objekts ruft immer dessen Hilfedatei auf. Ich habe für dich auch einen Code-chunk hinzugefügt welcher den Code enthält um die Hilfe-Datei für datasaurus_dozen zu öffnen.\nÜbungen\nÜbung 1\nÖffne die Hilfedatei für datasaurus_dozen\nWie viele Zeilen und wie viele Spalten hat der Datensatz datasaurus_dozen?\nWas sind die Variablen, die im Dataframe enthalten sind?\nFüge deine Antworten zu deinem R Markdown Bericht hinzu.\nSchauen wir uns an, was diese Datensätze sind. Dazu können wir eine Häufigkeitstabelle (frequency table) der dataset Variable erstellen:\n\n\ndatasaurus_dozen %>% \n  group_by(dataset) %>% \n  count() \n\n\n# A tibble: 13 x 2\n# Groups:   dataset [13]\n   dataset        n\n   <chr>      <int>\n 1 away         142\n 2 bullseye     142\n 3 circle       142\n 4 dino         142\n 5 dots         142\n 6 h_lines      142\n 7 high_lines   142\n 8 slant_down   142\n 9 slant_up     142\n10 star         142\n11 v_lines      142\n12 wide_lines   142\n13 x_shape      142\n\nDer ursprüngliche Datasaurus (dino) wurde von Alberto Cairo in diesem großartigen Blogpost erstellt. Das andere Dutzend wurde mit Hilfe von Simulated Annealing generiert und der Prozess wird in dem Paper Same Stats, Different Graphs: Generating Datasets with Varied Appearance and Identical Statistics through Simulated Annealing1 von Justin Matejka und George Fitzmaurice beschrieben. In dem Paper simulieren die Autoren eine Vielzahl von Datensätzen, die die gleichen zusammenfassenden Statistiken wie der Datasaurus haben, aber sehr unterschiedliche Verteilungen aufweisen.\n🧶 ✅ ⬆️ Knit, commit und push deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 1 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nÜbung 2\nUnten findest du den Code, den du brauchst, um diese nächste Übunge zu lösen. Die Antworten für 1 und 2 sind schon gegeben und auch in deiner R Markdown Datei enthalten.\nPlot y gegen x für den dino Datensatz (Code ist in R Markdown Datei)\nBerechne dann den Korrelationskoeffizienten zwischen “x” und “y” für diesen Datensatz. (Code ist in R Markdown Datei)\nKlicke auf knit um das Dokument zu stricken\nCode vorlesen\nHier siehst du neuen Code, welchen wir noch nicht im Kurs behandelt haben. Dieser kann folgendermassen gelesen werden:\nBeginne mit dem datasaurus_dozen und leite es in die Funktion filter, um nach Beobachtungen zu filtern, bei denen dataset == \"dino\" ist. Speichere den resultierenden gefilterten Dataframe als einen Dataframe namens dino_data.\n\n\ndino_data <- datasaurus_dozen %>%\n  filter(dataset == \"dino\")\n\n\n\nHier geht eine ganze Menge vor sich, also lassen wir es langsam angehen und nehmen es Schritt für Schritt auseinander.\nErstens, der Pipe-Operator: %>%, nimmt das, was davor kommt und sendet es als erstes Argument an das, was danach kommt. Hier sagen wir also, dass wir den datasaurus_dozen Dataframe nach Beobachtungen filtern, bei denen dataset == \"dino\" ist.\nZweitens, der Zuweisungsoperator: <-, weist dem gefilterten Dataframe den Namen dino_data zu.\nAls nächstes wollen wir diese Daten visualisieren. Dafür verwenden wir die Funktion ggplot(). Das erste Argument sind die Daten, die wir visualisieren wollen. Als nächstes definieren wir die aesthetischen Mappings (visuelle Eigenschaften). In anderen Worten, die Spalten der Daten, die auf bestimmte visuelle Eigenschaften des Plots abgebildet werden, z.B. wird die x-Achse die Variable namens x und die y-Achse die Variable namens y repräsentieren.\nDann fügen wir eine weitere Ebene zu diesem Diagramm hinzu, in der wir definieren, welche geometrischen Formen wir verwenden wollen, um jede Beobachtung in den Daten darzustellen. In diesem Fall wollen wir, dass es sich um Punkte handelt, daher geom_point().\n\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n  geom_point()\n\n\n\n\nNächste Woche wirst du mehr über die Philosophie der Datenvisualisierung in Layern erfahren. Für den Moment kannst du dem Code folgen, welcher dir zur Verfügung gestellt wird.\nFür den zweiten Teil dieser Übungen müssen wir eine zusammenfassende Statistik berechnen: den Korrelationskoeffizienten. Der Korrelationskoeffizient, in der Statistik oft als \\(r\\) bezeichnet, misst den linearen Zusammenhang zwischen zwei Variablen.\nDu wirst sehen, dass einige der Variablenpaare, die wir darstellen, keinen linearen Zusammenhang zwischen ihnen haben. Das ist genau der Grund, warum wir zuerst visualisieren wollen: visualisieren, um die Form der Beziehung zu beurteilen, und \\(r\\) nur berechnen, wenn es relevant ist.\nIn diesem Fall macht die Berechnung eines Korrelationskoeffizienten wirklich keinen Sinn, da die Beziehung zwischen x und y definitiv nicht linear ist - sie ist dinosaurierhaft!\nAber zur Veranschaulichung lass uns den Korrelationskoeffizienten zwischen “x” und “y” berechnen.\nBeginne mit dino_data und berechne eine zusammenfassende Statistik, die wir r nennen werden, als die Beziehung (cor) zwischen x und y.\n\n\ndino_data %>%\n  summarize(r = cor(x, y))\n\n\n# A tibble: 1 x 1\n        r\n    <dbl>\n1 -0.0645\n\n🧶 ✅ ⬆️ Knit, commit, und pushe deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 2 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nÜbung 3\nPlotte y gegen x für den star Datensatz.\nDu kannst (und solltest) den Code, den wir oben genutzt, wiederverwenden, ersetze den Namen des Datensatzes durch den gewünschten Datensatz. Berechne dann den Korrelationskoeffizienten zwischen “x” und “y” für diesen Datensatz. Wie ist dieser Wert im Vergleich zu r von dino?\n🧶 ✅ ⬆️ Dies ist ein weiterer guter Ort, um zu pausieren, zu stricken (knit), Änderungen mit der Commit-Nachricht “Füge Antwort für Übung 3 hinzu.” zu committen und zu pushen. Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nÜbung 4\nPlotte y gegen x für den circle Datensatz.\nDu kannst (und solltest) den Code, den wir oben genutzt, wiederverwenden, ersetze den Namen des Datensatzes durch den gewünschten Datensatz. Berechne dann den Korrelationskoeffizienten zwischen “x” und “y” für diesen Datensatz. Wie ist dieser Wert im Vergleich zu r von dino?\n🧶 ✅ ⬆️ Du kannst erneut pausieren, die Änderungen mit der Commit-Nachricht “Füge Antwort für Übung 4 hinzu.” committen und pushen. Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nSuper! Ich hoffe, dass du es schaffst in der Hausaufgabe bis hierhin zu kommen. Die nächsten beiden Übungen sind Bonus Übungen falls du Lust hast noch etwas weiter zu arbeiten.\nÜbung 5 (Bonus)\nZum Schluss wollen wir alle Datensätze auf einmal darstellen. Um dies zu tun, werden wir Method für eine Facettierung nutzen.\nMit einer Facette (facet) durich die Variable dataset, platzieren wir die Plots in einem Raster aus drei Spalten, entfernen die Legende und geben der Variable dataset eine visuelle Eigenschaft (aesthetic) indem wir es dem Argument ‘color’ zuordnen.\n\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+\n  geom_point()+\n  facet_wrap(~ dataset, ncol = 3) +\n  theme(legend.position = \"none\")\n\n\n\nUnd wir können die Funktion group_by() in Kombination mit der Funktion summarize() verwenden, um alle zusammenfassenden Korrelationskoeffizienten zu erzeugen.\n\n\ndatasaurus_dozen %>%\n  group_by(dataset) %>%\n  summarize(r = cor(x, y)) \n\n\n\nÜbung 6 (Bonus)\nGratulation! Du hast die Übungen abgeschlossen. Zwei Dinge noch:\n\n\n\n(1) Ändere die Grösse deiner Abbildungen\nKlicke auf das Zahnradsymbol oben im R Markdown Dokument und wähle “Output Options…” im Dropdown-Menü. In dem sich öffnenden Dialogfenster gehst du zum Reiter “Figures” und änderst die Höhe und Breite der Figuren und klickst auf “OK”, wenn du fertig bist. Dann stricke dein Dokument und schaue, wie dir die neuen Größen gefallen. Ändere und stricke wieder und wieder, bis du mit den Figurengrößen zufrieden bist. Schau dir den YAML-Header an und beachte, dass diese Werte dort gespeichert werden, was bedeutet dass du diese auch hier ändern kannst.\n\n\n\nDu kannst auch verschiedene Größen für unterschiedliche Abbildungen verwenden. Klicke dazu auf das Zahnradsymbol innerhalb des Chunks, in dem du eine Änderung vornehmen möchtest. Das Ändern der Abbildungsgrößen hat neue Optionen zu diesen Chunks hinzugefügt: fig.width und fig.height. Du kannst sie auch ändern, indem du verschiedene Werte direkt in deinem R Markdown Dokument definierst.\n\n\n\n(2) Ändere das Aussehen deines Berichts:\nKlicke erneut auf das Zahnradsymbol oben im R Markdown Dokument und wähle “Output Options…” im Dropdown-Menü. Probiere im Reiter “General” des sich öffnenden Dialogfeldes verschiedene Optionen für die Syntaxhervorhebung und das Design (theme) aus. Klicke auf OK und stricke dein Dokument. Du kannst mit diesen Optionen herumspielen, bis du mit dem Aussehen zufrieden bist.\nBravo, du bist fertig! Übertrage alle verbleibenden Änderungen, verwende die Commit-Nachricht \"Fertig mit Übung 1! \" und pushe. Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist. Bevor du die Aufgabe beendest, stelle sicher, dass alle Dokumente in deinem GitHub Repository aktualisiert sind.\n\nMatejka, Justin, and George Fitzmaurice. “Same stats, different graphs: Generating datasets with varied appearance and identical statistics through simulated annealing.” Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems. ACM, 2017.↩︎\n",
      "last_modified": "2021-03-08T11:19:51+01:00"
    },
    {
      "path": "ha-02-hallo-ogd.html",
      "title": "Hausaufgabe 02 - Hallo Open (Government) Data",
      "author": [],
      "contents": "\n\nContents\nZiele\nErste Schritte\nPackages\nData\nÜbungen\nÜbung 1\nÜbung 2\nÜbung 3\nÜbung 4 (Bonus)\n\n\nDas Portal opendata.swiss stellt der Allgemeinheit offene Behördendaten in einem zentralen Katalog zur Verfügung. Es wird betrieben vom Bundesamt für Statisik und ist ein gemeinsames Projekt von Bund, Kantonen, Gemeinden und weiteren Organisationen mit einem staatlichen Auftrag. In dieser Hausaufgabe nutzen wir den Datensatz “Corona Hilfen im Kulturbereich im Kanton Zürich” publiziert am 04. März 2021 von der Fachstelle Open Government Data des Kantons Zürich, und der Fachstele Kultur der Direktion der Justiz und des Innern.\nZiele\nDiese Hausaufgabe hat die folgenden Ziele:\neinen OGD Datensatz von opendata.swiss zu erkunden\nVisualisierungen zu rekonstruieren\nMehr Übung mit Git und GitHub zu bekommen\nErste Schritte\nÖffne deine Email Inbox und suche nach der Email mit dem Link für das GitHub Repo zu dieser Hausaufgabe (ha-02-hallo-ogd). Alternativ kannst du GitHub öffnen und in unserer GitHub Organisation nach dem Repo mit deinem Namen suchen.\nFolge den Schritten aus Hausaufgabe 1 oder den Folien der Woche 2 um das GitHub Repo in deine RStudio Cloud zu clonen.\nPackages\nIn dieser Hausaufgabe lernst du ein zwei R Packages kennen, welche wir in Woche 3 in mehr Detail behandelnt werden. Das {readr} und das {dplyr} Package, welche beide zur Sammlung der {tidyverse} Packages gehören.\n\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n\n\n\nData\nWir nutzen den Datensatz mit dem Titel “Corona Hilfen im Kulturbereich im Kanton Zürich” publiziert am 04. März 2021 von der Fachstelle Open Government Data des Kantons Zürich, Fachstele Kultur (Direktion der Justiz und des Innern).\n\n\n\nDie Beschreibung der Variablen ist auf der Ressource für den Datensatz zu finden:\nKategorie = Antragstellende Kategorie (‘Kulturschaffende’, ‘Kulturunternehmen gemeinnützig’ oder ‘Kulturunternehmen gewinnorientiert’)\nSparte = Kultursparte (‘Bereichsübergreifend’, ‘Bildende Kunst’, ‘Design’, ‘Film’, ‘Kino’, ‘Klubs und Konzertlokale’, ‘Literatur’, ‘Museen’, ‘Musik’ oder ‘Tanz/Theater’)\nNachgefragt = Nachgefragter Betrag in CHF (gerundet auf 100 CHF)\nBeschluss = Beschlossener Betrag in CHF (gerundet auf 100 CHF, ‘NA’ bei Ablehnung)\nStatus = Status des Antrags (‘Ablehnung’, ‘Ausbezahlt’ oder ‘Saldo offen’)\nEingangsdatum = Datum des Eingangs des Gesuchs; ‘Beschlussdatum’ = Datum des Beschlusses über das Gesuch\nID = anonymisierter Identifikator der antragstellenden natürlichen oder juristischen Person\nÜbungen\nÜbung 1\nErinnerst du dich, dass RStudio in vier Bereiche unterteilt ist? Versuche diese, ohne nachzuschauen, zu benennen.\nAufgaben\nFüge deine Antworten zu der R Markdown Datei für die Hausaufgabe hinzu\nStricke das Dokument und verifiziere, dass es keine Fehlermeldung gibt\n🧶 ✅ ⬆️ Knit, commit, und pushe deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 1 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nÜbung 2\nVerifiziere, dass der Datensatz corona_kultur in deinem Environment in RStudio zu finden ist. Wieviele Beobachtungen gibt es in diesem Datensatz?\nAufgaben\nIm RStudio Environment, klicke auf den Namen das Datensatzes corona_kultur\nFühre den Code View(corona_kultur) in der Console aus.\nNutze die Funktionen glimpse() und str() in einem R Code-chunk um die Daten zu erkunden\nFühre das Objekt welches die Daten enthält in der Console aus\nWelche zwei weiteren Funktionen kennst du um die Anzahl der Reihen und Spalten eines Datensatzes zu erfahren?\nIn der Spalte Beschluss taucht immer wieder der Wert ‘NA’ auf. Was bedeutet dies? Generell, und für diesen Datensatz?\n🧶 ✅ ⬆️ Knit, commit, und pushe deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 2 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nÜbung 3\nSchauen wir uns zuerst die Verteilung der Beträge an, welche nachgefragt wurden. Wir sehen, dass eine grosse Anzahl an kleineren Beträgen (< 100’000 CHF) beantragt wurde, und das einige grosse Beträge (> 2’000’000 CHF) bentragt wurden. Ein Antrag mit über 10 Millionen CHF sticht ganz besonders heraus und führt dazu, dass dieser Plot nicht besonders schön ist.\nCode vorlesen: Nutze das Objekt corona_kultur und plotte ein Histogram mit der der Verteilung der nachgefragten Beträge auf der x-Achse. Zähle die Anzahl der Gesuche pro 100’000 CHF auf der y-Achse.\n\n\nggplot(data = corona_kultur, aes(x = Nachgefragt)) +\n  geom_histogram(binwidth = 100000)\n\n\n\n\nCode vorlesen: Beginne mit dem Objekt corona_kultur und leite es in die Funktion filter(), um nach Beobachtungen zu filtern, bei denen die Variable ‘Nachgefragt’ grösser 2’000’000 ist. Ordne den Datensatz dann in absteigender Reihenfolge nach der Variable ‘Nachgefragt’\n\n\ncorona_kultur %>% \n  filter(Nachgefragt > 2000000) %>% \n  arrange(desc(Nachgefragt)) \n\n\n# A tibble: 9 x 8\n  Kategorie      Sparte     Nachgefragt Beschluss Status Eingangsdatum\n  <chr>          <chr>            <dbl>     <dbl> <chr>  <date>       \n1 Kulturunterne… Kino          10749500   2531400 Ausbe… 2020-11-30   \n2 Kulturunterne… Musik          3156000         0 Ausbe… 2020-04-29   \n3 Kulturunterne… Tanz/Thea…     2730800   1517900 Ausbe… 2020-09-20   \n4 Kulturunterne… Musik          2722200   2091900 Ausbe… 2020-09-20   \n5 Kulturunterne… Musik          2519000         0 Ausbe… 2020-05-20   \n6 Kulturunterne… Klubs und…     2391000    272200 Ausbe… 2020-07-20   \n7 Kulturunterne… Tanz/Thea…     2368000   1566400 Ausbe… 2020-04-30   \n8 Kulturunterne… Klubs und…     2159400    578400 Ausbe… 2020-04-13   \n9 Kulturunterne… Bereichsü…     2049100        NA Ableh… 2020-09-15   \n# … with 2 more variables: Beschlussdatum <date>, ID <chr>\n\nIn den folgenden Aufgaben wollen wir uns nur mit Beobachtungen beschäftigen bei welchen die Variable ‘Beschluss’ kleiner 100’000 CHF ist. Dazu wird der Datensatz gefiltert und als ein neues Objekt in dem RStudio Environment gespeichert. Ich habe den Code für dich vorbereitet.\n\n\ncorona_kultur_beschluss_gering <- corona_kultur %>% \n  filter(Beschluss < 100000) \n\n\n\nAufgaben\nSchreibe einen Text (im Style von Code vorlesen) für den Code im Code-chunk mit dem Titel ‘beschluss-klein’ in deiner R Markdown Datei\nNutze das Objekt corona_kultur_beschluss_gering und plotte die Verteilung der beschlossenen Beträge mittels eines Histograms (Tipp: Die Variable heisst ‘Beschluss’ und in R spielt Gross- und Kleinschreibung eine Rolle)\nOrdne die Variable ‘Sparte’ der der visuellen Eigenschaft für Farben zu (Tipp: Schaue in Praktikum 3 oder 4 nach wie du es dort gemacht hast)\nNutze Faceting und lege die Variable ‘Kategorie’ auf die Spalten (Tipp: Schaue in Praktikum 4 nach wie du es dort gemacht hast)\nNutze die Funktion scale_fill_brewer() und passe die Farbe nach einer Skalierung deiner Wahl an\nFüge einen Titel, einen Untertitiel und eine Bildunterschrift (caption) hinzu. (Tipp: Schaue in den Folien für Woche 2 nach)\n🧶 ✅ ⬆️ Knit, commit, und pushe deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 3 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\nGratulation! Du hast die Übungen abgeschlossen. Falls du noch Lust und Zeit hast, ist hier noch eine Bonusaufgabe.\nÜbung 4 (Bonus)\nNutze das Objekt corona_kultur und erstelle einen Barplot\nOrdne die Variable ‘Sparte’ der visuellen Eigenschaft für Farben\nNutze Faceting und lege die Variable ‘Kategorie’ auf die Spalten\nFüge einen Titel, einen Untertitiel und eine Bildunterschrift (caption) hinzu.\nÄndere die Position der Legende auf den unteren obereich des Plots (Tipp: Schau nach was wir in Übung 2 aus Praktikum 4 gemacht haben)\n🧶 ✅ ⬆️ Knit, commit, und pushe deine Änderungen auf GitHub mit der Commit-Nachricht “Füge Antwort für Übung 4 hinzu.” Achte darauf, alle geänderten Dateien zu committen und zu pushen, damit dein Git-Fenster danach aufgeräumt ist.\n\n\n\n",
      "last_modified": "2021-03-08T11:19:54+01:00"
    },
    {
      "path": "index.html",
      "title": "rstatsZH - Data Science mit R",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-03-08T11:19:55+01:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
